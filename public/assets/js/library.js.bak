$("input[data-type='currency']").on({
    keyup: function() {
        formatCurrency($(this));
    },
    blur: function() {
        formatCurrency($(this), "blur");
    }
});

$(function() {
    const applyDarkMode = () => {
        const savedTheme = localStorage.getItem('theme');
        if (savedTheme == 'dark') {
          const container = $('.choices');
          const choices_item = $('.choices__item')
          const choices_list = $('.choices__list')
          const choices_input = $('.choices__input')
          const choices_search = $('.choices__input.choices__input--cloned')
          const no_choices = $('.choices__item.choices__item--choice.choices__notice.has-no-choices')
          if (container) {
            container.addClass('dark');
            choices_item.addClass('dark');
            choices_list.addClass('dark')
            choices_input.addClass('dark')
            choices_search.addClass('dark')

            choices_search.attr('style', function(index, currentStyle) {
                return (currentStyle || '') + 'background-color: #1d232a !important;';
            });

            no_choices.attr('style', function(index, currentStyle) {
                return (currentStyle || '') + 'background-color: #1d232a !important;';
            });
          }
        }
    };

    // Apply dark mode styles on load
    applyDarkMode();

    // Observe for changes in the dark mode class
    const observer = new MutationObserver(() => {
      applyDarkMode();
    });

    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });

    const choices_province = new Choices('.select_province', {
        searchEnabled: true,
        shouldSort: false,
        removeItemButton: true,
    });

    fetch('https://muhrizkiakbar.github.io/api-wilayah-indonesia/static/api/provinces.json')
        .then(response => response.json())
        .then(data => {
          console.log("jalan")
          const formattedChoices = data.map(option => ({
            value: option.id,
            label: option.name,
            selected: false,
          }));
          choices_province.setChoices(formattedChoices);
        })
        .catch(error => console.error('Error loading options:', error));

    const choices_residence = new Choices('.select_residence', {
        searchEnabled: true,
        shouldSort: false,
        removeItemButton: true,
    });

    $('.select_province').on('change', function(){
        const province_id = $(this).val(); // Get selected parent ID

        // Clear child choices
        choices_residence.clearChoices();

        $.ajax({
          url: `https://muhrizkiakbar.github.io/api-wilayah-indonesia/static/api/regencies/${province_id}.json`, // Replace with your API endpoint
          method: 'GET',
          success: function (data) {
            // Format data for Choices.js
            const childOptions = data.map(item => ({
              value: item.id,
              label: item.name,
            }));

            // Update child dropdown
            choices_residence.setChoices(childOptions);
          },
          error: function (error) {
            console.error('Error fetching child options:', error);
          },
        });
    })
})

function formatNumber(n) {
    // format number 1000000 to 1,234,567
    return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ".")
}


function formatCurrency(input, blur) {
    // appends $ to value, validates decimal side
    // and puts cursor back in right position.

    // get input value
    var input_val = input.val();

    // don't validate empty input
    if (input_val === "") { return; }

    // original length
    var original_len = input_val.length;

    // initial caret position
    var caret_pos = input.prop("selectionStart");

    // check for decimal
    if (input_val.indexOf(",") >= 0) {

        // get position of first decimal
        // this prevents multiple decimals from
        // being entered
        var decimal_pos = input_val.indexOf(",");

        // split number by decimal point
        var left_side = input_val.substring(0, decimal_pos);
        var right_side = input_val.substring(decimal_pos);

        // add commas to left side of number
        left_side = formatNumber(left_side);

        // validate right side
        right_side = formatNumber(right_side);

        // On blur make sure 2 numbers after decimal
        if (blur === "blur") {
            right_side += "00";
        }

        // Limit decimal to only 2 digits
        right_side = right_side.substring(0, 2);

        // join number by .
        input_val = "Rp" + left_side + "," + right_side;

    } else {
        // no decimal entered
        // add commas to number
        // remove all non-digits
        input_val = formatNumber(input_val);
        input_val = "Rp" + input_val;

        // final formatting
        if (blur === "blur") {
            input_val += ",00";
        }
    }

    // send updated string to input
    input.val(input_val);

    // put caret back in the right position
    var updated_len = input_val.length;
    caret_pos = updated_len - original_len + caret_pos;
    input[0].setSelectionRange(caret_pos, caret_pos);
}

function formatCurrencyValue(input_val){
    if (input_val === "") { return; }

    // original length
    var original_len = input_val.length;
    //
    // check for decimal
    if (input_val.indexOf(",") >= 0) {

        // get position of first decimal
        // this prevents multiple decimals from
        // being entered
        var decimal_pos = input_val.indexOf(",");

        // split number by decimal point
        var left_side = input_val.substring(0, decimal_pos);
        var right_side = input_val.substring(decimal_pos);

        // add commas to left side of number
        left_side = formatNumber(left_side);

        // validate right side
        right_side = formatNumber(right_side);

        // On blur make sure 2 numbers after decimal
        if (blur === "blur") {
            right_side += "00";
        }

        // Limit decimal to only 2 digits
        right_side = right_side.substring(0, 2);

        // join number by .
        input_val = "Rp" + left_side + "," + right_side;

    } else {
        // no decimal entered
        // add commas to number
        // remove all non-digits
        input_val = formatNumber(input_val);
        input_val = "Rp" + input_val;

        // final formatting
        if (blur === "blur") {
            input_val += ",00";
        }
    }

    // send updated string to input
    return input_val;
}

